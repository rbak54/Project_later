}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen)
toplot<-matrix(nrow=nrow(communitymatrix)+1,ncol=gen)
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-matrix[,2]
#rownames(means[row])<-row
}
}
toplot
toplot
toplot[2]
toplot[2,]
length(toplot[2,])
length(matrix[,2])
communitymatrix<-makecommunitymatrix(100)
gen<-10
# Challenge question B
Challenge_B <- function() {
# clear any existing graphs and plot your graph within the R window
graphics.off()
means<-matrix(nrow=10,ncol=200)
colnames(means)<-1:200
makecommunitymatrix<-function(communitylength){
listfact<-vector()
for (i in (1:communitylength)){
if (communitylength%%i==0){
listfact<-c(listfact,i)
}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen)
toplot<-matrix(nrow=nrow(communitymatrix)+1,ncol=gen)
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
}
# Challenge question C
Challenge_C <- function() {
# clear any existing graphs and plot your graph within the R window
}
toplot[2,]
toplot
t(matrix[,2])
toplot[row,]
class(matriz)
class(matrix)
class(toplot)
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)+1,ncol=gen))
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
topplot[ncol(toplot)]
toplot[ncol(toplot)]
toplot[nrow(toplot)]
toplot[nrow(toplot)]
nrow(toplot)
toplot[nrow(toplot),]
toplot[nrow(toplot),]<-1:nrow(toplot)
toplot
ggplot(data=toplot,aes(x=toplot(10),y=toplot(1:9))
}
}
# Challenge question C
Challenge_C <- function() {
# clear any existing graphs and plot your graph within the R window
}
# Challenge question D
Challenge_D <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
# Challenge question E
Challenge_E <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
# Challenge question F
Challenge_F <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
ggplot(data=toplot,aes(x=toplot(10),y=toplot))
ggplot(data=toplot,aes(x=toplot[10,],y=toplot))
ggplot(data=toplot,aes(x=toplot[10],y=toplot))
ggplot(data=toplot,aes(x=toplot[,10],y=toplot))
toplot[10.]
toplot[10,]
ggplot(data=toplot,aes(x=toplot[10,],y=toplot[1:9,]))
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix),ncol=gen))
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
toplot[nrow(toplot),]<-1:nrow(toplot)
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix),ncol=gen))
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes(toplot))
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes())
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes())+geom_point()
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes(y=toplot))+geom_point()
toplot
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,nrow=2))
gen<-10
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,nrow=2))
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[q+1,q:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
q<-0
q<-q+gen
q
q<-q+gen
q
q+1
(q+1):(gen+q)
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen){
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-1:gen
ggplot(data=toplot,aes(y=toplot))+geom_point()
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
q=0
dim(communitymatrix)
nrow(communitymatrix)
gen<-10
plotting<-function(communitymatrix,gen){
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:(nrow(communitymatrix)*gen))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-1:gen
ggplot(data=toplot,aes(y=toplot))+geom_point()
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:(nrow(communitymatrix)*gen))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#for (row in (1:nrow(communitymatrix))){
while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
community<-communitymatrix[row,]
matrix<-calc(gen,community)
matrix
t(matrix[,2])
length(t(matrix[,2]))
length(q+1:gen+q)
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot
q<-gen+q
q
nrow(communitymatrix)
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
q<-gen+q
q
q+1:gen+q
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-rep(1:gen,nrow(communitymatrix))
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2,]<-rep(1:gen,nrow(communitymatrix))
toplot
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
toplot[3,(q+1):(gen+q)]<-row
q<-gen+q
#rownames(means[row])<-row
}
rownames(toplot)<-c("mean","time","initial")
toplot
ggplot(data=toplot,aes(x=time,y=mean))+geom_point()
ggplot(data=toplot,aes(x="time",y="mean"))+geom_point()
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[(q+1):(gen+q),1]<-t(matrix[,2])
toplot[(q+1):(gen+q),3]<-row
q<-gen+q
#rownames(means[row])<-row
}
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[(q+1):(gen+q),1]<-matrix[,2]
toplot[(q+1):(gen+q),3]<-row
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[,2]<-rep(1:gen,nrow(communitymatrix))
colnames(toplot)<-c("mean","time","initial")
toplot
ggplot(data=toplot,aes(x=time,y=mean))+geom_point()
ggplot(data=toplot,aes(x=time,y=mean))+geom_point(color=initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
as.factor(toplot$initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
toplot$initial<-as.factor(toplot$initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
communitymatrix<-makecommunitymatrix(100)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
Challenge_A()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_A()
Challenge_B()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
communitymatrix<-makecommunitymatrix(100)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
communitymatrix<-makecommunitymatrix(100)
means<-matrix(nrow=10,ncol=200)
colnames(means)<-1:200
makecommunitymatrix<-function(communitylength){
listfact<-vector()
for (i in (1:communitylength)){
if (communitylength%%i==0){
listfact<-c(listfact,i)
}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-200
row=2
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
ccommunity#
ccommunity
community
max(community)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
install.packages("xtable")
setwd("~/Documents/Main Project/Code")
dataI<-read.csv("../Data/Covid/india/CovidCrowd/data/raw_data.csv")
head(dataI)
dataI<-read.csv("../Data/Covid/india/CovidCrowd/data/raw_data.csv")
head(dataI)
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-cases-uk.csv")
head(data)
head(dataUK)
tail(dataUK)
dataUK[300:500]
dataUK[300:500,]
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-totals-england.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-totals-england.csv")
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-totals-uk.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-cases-uk.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-indicators-uk.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-totals-uk.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-cases-uk.csv")
dataUK
dataUK<-read.csv("../Data/Covid/uk/covid-19-uk-data/data/covid-19-cases-uk.csv")
dataUK
dataI<-read.csv("../Data/Covid/india/CovidCrowd/data/raw_data.csv")
dataI
datak<-read.csv("../Data/Covid/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
datak<-read.csv("../Data/Covid/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
datak<-read.csv("../Data/Covid/JOHN HOPKINS/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
datak[1,]
ggplot(data=datak,aes())
datak[order(datak["Country.Region"]),1:2]
datak[,"Country.Region"=US]
datak[(which"Country.Region"=US,]
datak[(which"Country.Region"=US),]
datak[(which"Country.Region"==US),]
datak[which("Country.Region"==US),]
datak[which("Country.Region"=="US"),]
datak
datak[which("Country.Region"=="US"),]
which("Country.Region"=="US")
datak[which(datak,"Country.Region"=="US"),]
datak?which()
?which
datak[which(datak$Country.Region=="US"),]
datak[which(datak$Country.Region=="US"),]
US<-datak[which(datak$Country.Region=="US"),]
US$Country.Region
unique(US$Country.Region)
unique(US$Province.State_
unique(US$Province.State)
unique(US$Province.State)
#italy
dataI<-read.csv("../Data/Covid/Italy/COVID-19/dati-regioni/dpc-covid19-ita-regioni-latest.csv")
head(dataI)
dataI<-read.csv("../Data/Covid/Italy/COVID-19/dati-province/dpc-covid19-ita-province-latest.csv")
head(dataI)
CHina<-datak[which(datak$Country.Region=="China"),]
China<-datak[which(datak$Country.Region=="China"),]
China
exp<-c(0.02,0.37,0.35,0.23,3)
sum(exp)
exp<-c(0.02,0.37,0.35,0.23,0.03)
sum(exp)
ob<-c(1,49,56,58,13)
exp<-exp*sum(ob)
sum(exp)
sum(ob)
df<-(nrow(exp)-1)*(ncol(ob)-1)
df
df<-(ncol(ob)-1)
df
df<-ncol(ob)-1
df
df<-length(ob)-1
df#
df<-length(ob)-1
chisquared<-sum(((ob-exp)^2)/exp)
chisquared
1-pchisq(chisquared,df)
ob
exp
exp<-c(0.02,0.37,0.35,0.23,0.03)
58+13
71/sum(ob)
exp<-c(0.39,0.35,0.23,0.03)
ob<-c(50,56,58,13)
exp<-exp*sum(ob)
sum(exp)
sum(ob)
df<-length(ob)-1
chisquared<-sum(((ob-exp)^2)/exp)
chisquared
1-pchisq(chisquared,df)
obp<-ob/sum(ob)
obp
sum(obp[-1])
129/196
56+58+13
(56+58+13)/196
146/196
127/177
10/61
61*1.16
177*0.03
