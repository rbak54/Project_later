install.packages("epimdr")
require(epimdr)
?ode
vector(80,length = 4)
vector(rep(3,3))
?vector
c(rep(3,3))
time = seq(0, 5000,by = 1/10)
temperature=15*sin(2*pi*(time-91)/365)+30
humidity=c(rep(80, length(time))
#parameters from bjornstad book and guesses- just to test functions work! not sure if this is quite right
parmssus = list(mu = 00.0001, sigma=0.25 ,alpha=0.0005, kappa0 = 25, gamma = 1/2,contact=0.7,temp=temperature,humidity=humidity, f=1/900)
]
time = seq(0, 5000,by = 1/10)
temperature=15*sin(2*pi*(time-91)/365)+30
humidity=c(rep(80, length(time))
#parameters from bjornstad book and guesses- just to test functions work! not sure if this is quite right
parmssus = list(mu = 00.0001, sigma=0.25 ,alpha=0.0005, kappa0 = 25, gamma = 1/2,contact=0.7,temp=temperature,humidity=humidity, f=1/900)
]time = seq(0, 5000,by = 1/10)
time = seq(0, 5000,by = 1/10)
time = seq(0, 5000,by = 1/10)
temperature=15*sin(2*pi*(time-91)/365)+30
humidity=c(rep(80, length(time))
humidity=c(rep(80, length(time))
humidity=c(rep(80, length=length(time))
humidity=c(rep(80, length(time)))
humidity=c(rep(80, length(time)))
#parameters from bjornstad book and guesses- just to test functions work! not sure if this is quite right
parmssus = list(mu = 00.0001, sigma=0.25 ,alpha=0.0005, kappa0 = 25, gamma = 1/2,contact=0.7,temp=temperature,humidity=humidity, f=1/900)
start = c(S = 0.999, E=0.001,I = 0.00, R = 0)
log(0)
log(1)
temp/30
temperature/30
log(0.4)
log(1-1)
temperature
temperature=15*sin(2*pi*(time-91)/365)+15
temperature
plot(time,temperature)
temperature/30
plot(time,temperature/30)
plot(time,log(1-temperature/30))
plot(time,(1-temperature/30))
MAX(1-temperature/30)
max(1-temperature/30)
min(1-temperature/30)
plot(time,(1-temperature/60)
)
plot(time,(1-temperature/60)
plot(time,(1-temperature/60))
plot(time,(1-temperature/60))
plot(time,(1-temperature/60)-0.5)
plot(time,(temperature/60)-0.5)
plot(time,(temperature/60))
min(1-temperature/60)
log(0.5)
humidity[1]
humidity[0/1]
S = 0.999
E = 0.001
I = 0.00
R = 0
mu = 00.000,
sigma = 365/5 ,
alpha = 0.0000,
gamma = 72,
f = 0,
N = 1,
nu = 0.0,
theta = 0 ,# where from,
containment = 0.5 , #where from
k = 0.03,
epsilon = 0.4, #where from
beta0 = 2 * 72
infection <- beta0 * I * S / N * (1 + epsilon * cos (2 * pi * (time - theta)) * (1 - containment * I^3 / (k^3 + I^3))
R = 0
mu = 00.000
sigma = 365/5
alpha = 0.0000
gamma = 72
f = 0
N = 1
nu = 0.0
theta = 0 # where from,
containment = 0.5  #where from
k = 0.03
epsilon = 0.4 #where from
beta0 = 2 * 72
infection <- beta0 * I * S / N * (1 + epsilon * cos (2 * pi * (time - theta)) * (1 - containment * I^3 / (k^3 + I^3))
infection <- beta0 * I * S / N * (1 + epsilon * cos (2 * pi * (time - theta))) * (1 - containment * I^3 / (k^3 + I^3))
infection <- beta0 * I * S / N * (1 + epsilon * cos (2 * pi * (time - theta))) * (1 - containment * I^3 / (k^3 + I^3))
install.packages(ncdf4)
install.packages("ncdf4")
read.csv("./Downloads/pnas.1607747113.sd01.txt")
a<-read.csv("./Downloads/pnas.1607747113.sd01.txt")
hist(a$day)
hist(a$value)
require(dplyr)
require(dplyr)
install.packages("dplyr")
require(dplyr)
require(dplyr)
require("deSolve")
require("ggplot2")
require("dpylr")
install.packages("minpack.lm")
16..1-1.8
16.1-1.8
(16.1-1.8)/2
a<-1.8+6.5+4.1+3.7
a-1.8
source('~/Documents/Project/Code/writep/writeupplots.R')
setwd("~/Documents/Project/Code/writep")
source('~/Documents/Project/Code/writep/writeupplots.R')
setwd("~/Documents/Project/Code/writep")
source("../../Code/modelling_functions.R")
source("../Code/modelling_functions.R")
source("../Model/modelling_functions.R")
source('~/Documents/Project/Code/writep/writeupplots.R')
source('~/Documents/Project/Code/writep/writeupplots.R')
setwd("~/Documents/Project/Code/writep")
correlation_df<-read.csv("../../Results/fromfunction/cors/5Temperaturecorrelation_dataframe0.1parm.csv")
require(lme4)
parms = list( mu = 2.06e-5,sigma = 0.68 ,p = 0.001, gamma =0.25,f=0.1,
N = NA, nu = 5.07e-5, h=0.25 / 24 ,epsilon= 0.05, d=4/24,Max_cr=29.97,climate_label="Temperature",
g=0.085,q0=-9.079,Climate_Variables=NA,climate_label_long="Temperature")
sims=160
correlation_df$combination<-as.factor(correlation_df$combination)
#head(correlation_df)
a<-lmer(data=correlation_df,corsI~lat+long+mismatch+log(pop)+(1|combination))
source('~/Documents/Project/Code/Model/integrationnew.R')
setwd("~/Documents/Project/Code/Model")
source('~/Documents/Project/Code/Model/integrationnew.R')
